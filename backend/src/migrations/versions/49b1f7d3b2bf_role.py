"""Role

Revision ID: 49b1f7d3b2bf
Revises: afba046d9246
Create Date: 2025-11-01 14:58:28.435006

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '49b1f7d3b2bf'
down_revision: Union[str, Sequence[str], None] = 'afba046d9246'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=512), nullable=True),
    sa.Column('codename', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codename'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.drop_constraint(op.f('telegram_users_company_id_fkey'), 'telegram_users', type_='foreignkey')
    op.drop_column('telegram_users', 'company_id')
    op.drop_table('companies')
    op.drop_table('deal_comments')
    op.drop_table('deals')
    op.drop_index(op.f('ix_leads_status_new'), table_name='leads', postgresql_where="(status = 'NEW'::statusenum)")
    op.drop_index(op.f('ix_leads_status_processing'), table_name='leads', postgresql_where="(status = 'PROCESSING'::statusenum)")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('telegram_users', sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f('telegram_users_company_id_fkey'), 'telegram_users', 'companies', ['company_id'], ['id'])
    op.create_index(op.f('ix_leads_status_processing'), 'leads', ['status'], unique=False, postgresql_where="(status = 'PROCESSING'::statusenum)")
    op.create_index(op.f('ix_leads_status_new'), 'leads', ['status'], unique=False, postgresql_where="(status = 'NEW'::statusenum)")
    op.create_table('companies',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('deal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['deal_id'], ['deals.id'], name=op.f('companies_deal_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('companies_pkey'))
    )
    op.create_table('deal_comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('deal_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['deal_id'], ['deals.id'], name=op.f('deal_comments_deal_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('deal_comments_pkey'))
    )
    op.create_table('deals',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('lead_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deal_sum', sa.NUMERIC(precision=16, scale=2), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('SUCCESS', 'PROCESSING', 'CANCELLED', name='dealstatusenum'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['lead_id'], ['leads.id'], name=op.f('deals_lead_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('deals_pkey'))
    )
    op.drop_table('role_permissions')
    op.drop_table('roles')
    op.drop_table('permissions')
    # ### end Alembic commands ###
