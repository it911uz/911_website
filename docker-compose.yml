services:
  api:
    build: ./backend
    container_name: fastapi-app
    env_file:
      - test.env
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    # command: >
    #   sh -c "alembic upgrade head && python main.py"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs-app
    depends_on:
      - api
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: "1"
      # если фронт общается с backend по API — добавь:
      NEXT_PUBLIC_API_URL: "http://localhost:8000"
    # если хочешь live-обновления при разработке:
    # volumes:
    #   - ./frontend:/app
    #   - /app/node_modules
    restart: always

  postgres:
    image: 'postgres:17.6-alpine3.22'
    restart: always
    env_file:
      - test.env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: 'redis:7.4-alpine'
    container_name: redis-cache
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    restart: always
    depends_on:
      - api
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/logs:/var/log/nginx
volumes:
  db_data:
  redis_data:
